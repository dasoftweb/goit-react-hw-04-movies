{"version":3,"sources":["services/movies-api.js","components/MoviesList/MoviesList.js","views/Home.js","components/SearchForm/SearchForm.js","views/MoviesPage.js","images/noimage.svg","components/FetchNormalizer.js","components/CastList/CastList.js","views/Cast.js","components/ReviewsList/ReviewsList.js","views/Reviews.js","views/MovieDetailsPage.js","views/NotFound.js","App.js","index.js"],"names":["BASE_URL","API_KEY","getMovieById","movieId","axios","get","getCredits","getReviews","MoviesList","movies","className","map","id","title","to","Home","state","a","response","this","setState","data","results","console","log","Component","SearchForm","query","handleChange","e","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","type","autoComplete","autoFocus","placeholder","onChange","MoviesPage","searchQuery","onChangeQuery","prevProps","PrevState","normalizePosterPath","url","noimage","CastList","cast","profile_path","name","character","src","alt","Cast","match","params","ReviewsList","reviews","author","content","Reviews","MovieDetailsPage","movie","poster_path","release_date","vote_average","date","Date","getFullYear","score","overview","genres","ganre","activeClassName","path","component","NotFound","App","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f2d147b.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\nconst API_KEY = 'be2bb7fd29eddf6e05cfa10ca2e7b19c';\r\n\r\nexport const getTranding = () => {\r\n  const response = axios.get(\r\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&language=en-US`,\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const getMovieById = movieId => {\r\n  const response = axios.get(\r\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`,\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const getMovieByQuery = query => {\r\n  const response = axios.get(\r\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US`,\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const getCredits = movieId => {\r\n  const response = axios.get(\r\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`,\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const getReviews = movieId => {\r\n  const response = axios.get(\r\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`,\r\n  );\r\n  return response;\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './MoviesList.scss';\r\n\r\nconst MoviesList = ({ movies }) => (\r\n  <ul className=\"MoviesList\">\r\n    {movies.map(({ id, title }) => (\r\n      <li className=\"MoviesList-item\" key={id}>\r\n        <NavLink to={`/movies/${id}`} className=\"MoviesList-item__link\">\r\n          {title}\r\n        </NavLink>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nMoviesList.propTypes = {\r\n  movies: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default MoviesList;\r\n","import { Component } from 'react';\r\nimport {getTranding} from '../services/movies-api';\r\nimport MoviesList from '../components/MoviesList/MoviesList';\r\n\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    movies: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const response = await getTranding();\r\n    this.setState({ movies: response.data.results });\r\n  }\r\n\r\n  render() {\r\n    console.log();\r\n    return (\r\n      <div className='Content'>\r\n        <h1>Trending today</h1>\r\n        <MoviesList movies={this.state.movies} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","// import PropTypes from 'prop-types';\r\nimport { Component } from 'react';\r\nimport './SearchForm.scss';\r\n\r\nclass SearchForm extends Component {\r\n  state = { query: '' };\r\n\r\n  handleChange = e => {\r\n    this.setState({ query: e.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.query);\r\n    this.setState({ query: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search movies\"\r\n          value={this.state.query}\r\n          onChange={this.handleChange}\r\n        />\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchForm;\r\n","import { Component } from 'react';\r\nimport { getMovieByQuery } from '../services/movies-api';\r\nimport SearchForm from '../components/SearchForm/SearchForm';\r\nimport MoviesList from '../components/MoviesList/MoviesList';\r\n\r\nclass MoviesPage extends Component {\r\n  state = {\r\n    movies: [],\r\n    searchQuery: '',\r\n  };\r\n\r\n  async componentDidUpdate(prevProps, PrevState) {\r\n    if (PrevState.searchQuery !== this.state.searchQuery) {\r\n      const { searchQuery } = this.state;\r\n      const response = await getMovieByQuery(searchQuery);\r\n      this.setState({ movies: [...response.data.results] });\r\n    }\r\n  }\r\n\r\n  onChangeQuery = query => {\r\n    this.setState({\r\n      movies: [],\r\n      searchQuery: query,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Content\">\r\n        <SearchForm onSubmit={this.onChangeQuery} />\r\n        <MoviesList movies={this.state.movies} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesPage;\r\n","export default __webpack_public_path__ + \"static/media/noimage.28f594e6.svg\";","import noimage from '../images/noimage.svg';\r\n\r\nexport const normalizePosterPath = url => {\r\n  if (url) {\r\n    return 'https://image.tmdb.org/t/p/w500' + url;\r\n  }\r\n  return noimage;\r\n};\r\n\r\nexport const normalizeScore = score => {\r\n  return score * 10;\r\n};\r\n\r\nexport const normalizeDate = date => {\r\n  const toDate = new Date(date);\r\n  return toDate.getFullYear();\r\n};\r\n\r\n\r\n","import PropTypes from 'prop-types';\r\nimport './CastList.scss';\r\nimport { normalizePosterPath } from '../FetchNormalizer';\r\n\r\nconst CastList = ({ cast }) => (\r\n  <ul className=\"CastList\">\r\n    {cast.map(({ id, profile_path, name, character }) => (\r\n      <li className=\"CastList__item\" key={id}>\r\n        <img\r\n          className=\"CastList__img\"\r\n          src={normalizePosterPath(profile_path)}\r\n          alt={name}\r\n        ></img>\r\n        <h4 className=\"CastList__title\">{name}</h4>\r\n        <p className=\"CastList__text\">{character}</p>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nCastList.propTypes = {\r\n  cast: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default CastList;\r\n","import { Component } from 'react';\r\nimport { getCredits } from '../services/movies-api';\r\nimport CastList from '../components/CastList/CastList';\r\n\r\nclass Cast extends Component {\r\n  state = {\r\n    cast: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { movieId } = this.props.match.params;\r\n    const response = await getCredits(movieId);\r\n    this.setState({ cast: response.data.cast });\r\n  }\r\n\r\n  render() {\r\n    return <CastList cast={this.state.cast} />;\r\n  }\r\n}\r\n\r\nexport default Cast;\r\n","import PropTypes from 'prop-types';\r\nimport './ReviewsList.scss';\r\n\r\nconst ReviewsList = ({ reviews }) => (\r\n  <ul className=\"ReviewsList\">\r\n    {reviews.map(({ id, author, content }) => (\r\n      <li className=\"ReviewsList__item\" key={id}>\r\n        <h3 className=\"ReviewsList__title\"># {author}</h3>\r\n        <p className=\"ReviewsList__text\">{content}</p>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nReviewsList.propTypes = {\r\n  reviews: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default ReviewsList;\r\n","import { Component } from 'react';\r\nimport { getReviews } from '../services/movies-api';\r\nimport ReviewsList from '../components/ReviewsList/ReviewsList';\r\n\r\nclass Reviews extends Component {\r\n  state = {\r\n    reviews: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { movieId } = this.props.match.params;\r\n    const response = await getReviews(movieId);\r\n    this.setState({ reviews: response.data.results });\r\n  }\r\n\r\n  render() {\r\n    return <ReviewsList reviews={this.state.reviews} />;\r\n  }\r\n}\r\n\r\nexport default Reviews;\r\n","import { Component } from 'react';\r\nimport { NavLink, Route } from 'react-router-dom';\r\nimport { getMovieById } from '../services/movies-api';\r\nimport Cast from '../views/Cast';\r\nimport Reviews from '../views/Reviews';\r\nimport {\r\n  normalizePosterPath,\r\n  normalizeDate,\r\n  normalizeScore,\r\n} from '../components/FetchNormalizer';\r\n\r\nclass MovieDetailsPage extends Component {\r\n  state = {\r\n    movie: {},\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { movieId } = this.props.match.params;\r\n    const response = await getMovieById(movieId);\r\n    const { poster_path, release_date, vote_average } = response.data;\r\n    this.setState({\r\n      movie: {\r\n        ...response.data,\r\n        poster_path: normalizePosterPath(poster_path),\r\n        release_date: normalizeDate(release_date),\r\n        vote_average: normalizeScore(vote_average),\r\n      },\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      release_date,\r\n      poster_path,\r\n      title,\r\n      vote_average,\r\n      overview,\r\n      genres,\r\n    } = this.state.movie;\r\n    const { match } = this.props;\r\n    return (\r\n      <>\r\n        <div className=\"MovieDetails Content\">\r\n          <div className=\"MovieDetails__poster\">\r\n            <img\r\n              className=\"MovieDetails__img\"\r\n              src={poster_path}\r\n              alt={title}\r\n            ></img>\r\n          </div>\r\n\r\n          <div className=\"MovieDetails__desc\">\r\n            <h1>\r\n              {title} ({release_date})\r\n            </h1>\r\n            <p>User Score: {vote_average}%</p>\r\n            <h3>Overview</h3>\r\n            <p>{overview}</p>\r\n            <h3>Genres</h3>\r\n            {genres ? (\r\n              <ul className=\"Genres-list\">\r\n                {genres.map(ganre => (\r\n                  <li className=\"Genres-list__item\" key={ganre.id}>\r\n                    # {ganre.name}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            ) : (\r\n              <p>No data</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"additional\">\r\n          <h3 className=\"additional-title\">Additional information</h3>\r\n          <ul className=\"additional-list\">\r\n            <li className=\"additional-list__item\">\r\n              <NavLink\r\n                to={`${match.url}/cast`}\r\n                className=\"additional-list__link\"\r\n                activeClassName=\"additional-list__active\"\r\n              >\r\n                Cast\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"additional-list__item\">\r\n              <NavLink\r\n                to={`${match.url}/reviews`}\r\n                className=\"additional-list__link\"\r\n                activeClassName=\"additional-list__active\"\r\n              >\r\n                Reviews\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n          <Route path={`${match.path}/cast`} component={Cast}></Route>\r\n          <Route path={`${match.path}/reviews`} component={Reviews}></Route>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieDetailsPage;\r\n","const NotFound = () => {\r\n  return (\r\n    <div className=\"Content\">\r\n      <h1>404 - Page not found</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import { Component } from 'react';\r\nimport { Switch, Route, NavLink } from 'react-router-dom';\r\n// Components\r\nimport Home from './views/Home';\r\nimport MoviesPage from './views/MoviesPage';\r\nimport MovieDetailsPage from './views/MovieDetailsPage';\r\nimport NotFound from './views/NotFound';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <ul className=\"menu-list\">\r\n          <li className=\"menu-list__item\"> \r\n            <NavLink exact={true} to=\"/\" className=\"menu-list__link\" activeClassName=\"menu-active\">\r\n              Home\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/movies\" className=\"menu-list__link\" activeClassName=\"menu-active\">\r\n              Movies\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route path=\"/movies/:movieId\" component={MovieDetailsPage} />\r\n          <Route path=\"/movies\" component={MoviesPage} />\r\n          <Route path=\"/\" component={NotFound} />\r\n        </Switch>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import 'modern-normalize/modern-normalize.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport './styles/style.scss';\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}