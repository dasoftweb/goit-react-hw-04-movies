{"version":3,"sources":["services/movies-api.js","images/noimage.svg","components/FetchNormalizer.js","components/MoviesList/MoviesList.js","views/Home.js"],"names":["BASE_URL","API_KEY","getTranding","axios","get","getMovieById","movieId","getMovieByQuery","query","getCredits","getReviews","normalizePosterPath","url","noimage","normalizeScore","score","normalizeDate","date","Date","getFullYear","withRouter","movies","location","className","map","id","poster_path","title","to","pathname","state","from","src","alt","Home","a","response","this","setState","data","results","console","log","Component"],"mappings":"yIAAA,+LAEMA,EAAW,+BACXC,EAAU,mCAEHC,EAAc,WAIzB,OAHiBC,IAAMC,IAAN,UACZJ,EADY,uCAC2BC,EAD3B,qBAMNI,EAAe,SAAAC,GAI1B,OAHiBH,IAAMC,IAAN,UACZJ,EADY,kBACMM,EADN,oBACyBL,EADzB,qBAMNM,EAAkB,SAAAC,GAI7B,OAHiBL,IAAMC,IAAN,UACZJ,EADY,iCACqBC,EADrB,kBACsCO,EADtC,qBAMNC,EAAa,SAAAH,GAIxB,OAHiBH,IAAMC,IAAN,UACZJ,EADY,kBACMM,EADN,4BACiCL,EADjC,qBAMNS,EAAa,SAAAJ,GAIxB,OAHiBH,IAAMC,IAAN,UACZJ,EADY,kBACMM,EADN,4BACiCL,EADjC,sB,sIClCJ,UAA0B,oCCE5BU,EAAsB,SAAAC,GACjC,OAAIA,EACK,kCAAoCA,EAEtCC,GAGIC,EAAiB,SAAAC,GAC5B,OAAe,GAARA,GAGIC,EAAgB,SAAAC,GAE3B,OADe,IAAIC,KAAKD,GACVE,gB,gCCdhB,yCA2BeC,iBAvBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,SAAX,OACjB,oBAAIC,UAAU,aAAd,SACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAApB,OACV,oBAAIJ,UAAU,kBAAd,SACE,eAAC,IAAD,CACEK,GAAI,CACFC,SAAS,WAAD,OAAaJ,GACrBK,MAAO,CAAEC,KAAMT,IAEjBC,UAAU,wBALZ,UAOE,qBAAKA,UAAU,iBAAiBS,IAAKrB,YAAoBe,GAAcO,IAAG,UAAKN,EAAL,aACzEA,MATgCF,Y,uJCJrCS,E,4MACJJ,MAAQ,CACNT,OAAQ,I,8FAGV,4BAAAc,EAAA,sEACyBjC,cADzB,OACQkC,EADR,OAEEC,KAAKC,SAAS,CAAEjB,OAAQe,EAASG,KAAKC,UAFxC,gD,0EAKA,WAEE,OADAC,QAAQC,MAEN,sBAAKnB,UAAU,UAAf,UACE,oBAAIA,UAAU,gBAAd,4BACA,cAAC,IAAD,CAAYF,OAAQgB,KAAKP,MAAMT,gB,GAfpBsB,aAqBJT","file":"static/js/Home.bf9aeb0b.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\nconst API_KEY = 'be2bb7fd29eddf6e05cfa10ca2e7b19c';\r\n\r\nexport const getTranding = () => {\r\n  const response = axios.get(\r\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&language=en-US`,\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const getMovieById = movieId => {\r\n  const response = axios.get(\r\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`,\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const getMovieByQuery = query => {\r\n  const response = axios.get(\r\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US`,\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const getCredits = movieId => {\r\n  const response = axios.get(\r\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`,\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const getReviews = movieId => {\r\n  const response = axios.get(\r\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`,\r\n  );\r\n  return response;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/noimage.28f594e6.svg\";","import noimage from '../images/noimage.svg';\r\n\r\nexport const normalizePosterPath = url => {\r\n  if (url) {\r\n    return 'https://image.tmdb.org/t/p/w500' + url;\r\n  }\r\n  return noimage;\r\n};\r\n\r\nexport const normalizeScore = score => {\r\n  return score * 10;\r\n};\r\n\r\nexport const normalizeDate = date => {\r\n  const toDate = new Date(date);\r\n  return toDate.getFullYear();\r\n};\r\n\r\n\r\n","import PropTypes from 'prop-types';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { normalizePosterPath } from '../../components/FetchNormalizer';\r\nimport './MoviesList.scss';\r\n\r\nconst MoviesList = ({ movies, location }) => (\r\n  <ul className=\"MoviesList\">\r\n    {movies.map(({ id, poster_path, title }) => (\r\n      <li className=\"MoviesList-item\" key={id}>\r\n        <NavLink\r\n          to={{\r\n            pathname: `/movies/${id}`,\r\n            state: { from: location },\r\n          }}\r\n          className=\"MoviesList-item__link\"\r\n        >\r\n          <img className=\"MoviesList-img\" src={normalizePosterPath(poster_path)} alt={`${title} poster`} />\r\n          {title}\r\n        </NavLink>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nMoviesList.propTypes = {\r\n  movies: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default withRouter(MoviesList);\r\n","import { Component } from 'react';\r\nimport { getTranding } from '../services/movies-api';\r\nimport MoviesList from '../components/MoviesList/MoviesList';\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    movies: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const response = await getTranding();\r\n    this.setState({ movies: response.data.results });\r\n  }\r\n\r\n  render() {\r\n    console.log();\r\n    return (\r\n      <div className=\"Content\">\r\n        <h1 className=\"Content-title\">Trending today</h1>\r\n        <MoviesList movies={this.state.movies} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n"],"sourceRoot":""}